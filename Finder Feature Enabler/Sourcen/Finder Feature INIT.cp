/*** *  Finder Feature INIT.cp * *  (c)1996 Maxon, Markus Fritze ***/#include <Gestalt.h>static void         MyGestaltFuncEnd();/*** *  Unsere (sehr kleine)  *  Gestalt-Selector-Funktion ***/static pascal OSErr MyGestaltFunc(          OSType selector, long *response){    long    *lp =      static_cast<long*>(&MyGestaltFuncEnd);    // Finder Flags    if(selector == 0x666E64C5L) {        *response = lp[0];    // Translucent dragging    } else if(selector == 0x666E64B5L) {        *response = lp[1];    // der eigene Selector    } else if(selector == 'FPat') {        *response = static_cast<long>(lp);    }    return noErr;}// Hiermit markieren wir das Ende der obigen// Funktion, um die Länge des Codeblockes zu // errechnenstatic void         MyGestaltFuncEnd(){}/*** *	Dieser Code wird beim Neustart aufgerufen ***/void            main(void){    // Die Länge unseres Code-Fragmentes    Size    theSize =      static_cast<long>(&MyGestaltFuncEnd) -      static_cast<long>(&MyGestaltFunc);    // Speicher im System-Heap allozieren    // + 2 longs für unsere Variablen    Ptr     theData = ::NewPtrSysClear(theSize +                            sizeof(long) * 2);    // genügend Speicher vorhanden?    if(!theData) {        ::SysBeep(1);    } else {        // unsere Routine in den System-Heap        // verschieben        ::BlockMove(MyGestaltFunc, theData,                    theSize);        // Variablen auf Defaults setzen        long    *thePref =         static_cast<long*>(theData                            + theSize);        thePref[0] = 0x07;        thePref[1] = 0x00;        // Voreinstellungen übernehmen        long    **thePrefH =         static_cast<long**>(GetResource('Pref',                                         -4048));        if(thePrefH) {            thePref[0] = (*thePrefH)[0];            thePref[1] = (*thePrefH)[1];            ReleaseResource(             static_cast<Handle>(thePrefH));        }        // und als Gestalt-Funktion anmelden        ::NewGestalt(0x666E64C5L,              SelectorFunctionProcPtr(theData));        ::NewGestalt(0x666E64B5L,              SelectorFunctionProcPtr(theData));        ::NewGestalt('FPat',              SelectorFunctionProcPtr(theData));    }}